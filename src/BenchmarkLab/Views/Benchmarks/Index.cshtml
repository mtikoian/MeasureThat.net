@using Humanizer
@using MeasureThat.Net.Logic.Web
@using BenchmarkLab.Models
@model BenchmarkLab.Logic.Web.ResultsHolder<BenchmarkDtoForIndex>

@{
    ViewBag.Title = "Latest benchmarks";
}

<div class="page-header">
    <h2>
        Latest JavaScript Performance benchmarks
    </h2>
</div>


<div class="row">
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Benchmark name</th>
                <th>When Created</th>
            </tr>
        </thead>
        @foreach (var b in Model.Entities)
            {
            <tr>
                <td>
                    <a asp-action="Show" asp-route-id="@b.Id" asp-route-version="@b.Version" asp-route-name="@SeoFriendlyStringConverter.Convert(b.BenchmarkName)">@b.BenchmarkName</a>
                </td>
                <td>@b.WhenCreated.Humanize()</td>
            </tr>
        }
    </table>

</div>

<p>
    @{ await Html.RenderPartialAsync("_SharedCreateBenchmark"); }
    <a asp-controller="Benchmarks" asp-action="My" class="btn btn-default btn-lg">Your benchmarks</a>
</p>


<div class="hidden" id="progress-hidden">
    <div class="progress">
        <div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%;">
            <span class="sr-only"></span>
        </div>
    </div>
</div>
