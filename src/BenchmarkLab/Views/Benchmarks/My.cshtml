@using System.Threading.Tasks
@using Humanizer
@using MeasureThat.Net.Controllers
@using MeasureThat.Net.Logic.Web
@using MeasureThat.Net.Models
@using Microsoft.AspNetCore.Identity
@model Pager<BenchmarkDto>

@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Your benchmarks";
}

<div class="page-header">
    <h1>Your benchmarks</h1>
</div>

@if (Model.ItemCount > 0)
{
    <!-- pager -->
    if (Model.NumOfPages > 1)
    {

        <ul class="pagination" data-target="#benchmark-list" data-role="pagination-root" data-endpoint="@Url.Action("MyPage")">
            @for (var page = 0; page < Model.NumOfPages; page++)
            {
                <li class="@(page == 0 ? "active" : "")">
                    <a data-page="@page" href="#" data-role="page-button">@(page + 1)</a>
                </li>
            }
        </ul>
    }

    <div id="benchmark-list">
        @{ await Html.RenderPartialAsync("MyPage", Model.Entites); }
    </div>
    
}
else
{
    <h3>You don't have any benchmarks yet.</h3>
}

<div class="hidden" id="progress-hidden">
    <div class="progress">
        <div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%;">
            <span class="sr-only"></span>
        </div>
    </div>
</div>

<div>
    @{ await Html.RenderPartialAsync("_SharedCreateBenchmark"); }
</div>

@section Scripts{
<script src="~/js/benchmarklab.js" asp-append-version="true"></script>
<script type="text/javascript">
    var paginationController = new PaginationController();
</script>
}
