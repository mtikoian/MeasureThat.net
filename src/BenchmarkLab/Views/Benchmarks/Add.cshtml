@inject Microsoft.Extensions.Configuration.IConfiguration configuration
@model NewBenchmarkModel

@{
    ViewData["Title"] = "Create new benchmark";
}

<div class="page-header">
    <h1>Create new benchmark</h1>    
</div>

@using (Html.BeginForm("Add", "Benchmarks", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary();

    <div class="form-group">
        @Html.LabelFor(m => m.BenchmarkName)
        @Html.TextBoxFor(m => m.BenchmarkName, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.BenchmarkName, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Description)
        @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <div class="g-recaptcha" data-sitekey="@(configuration["ReCaptcha:SiteKey"])"></div>
    </div>
    <input type="submit" class="btn btn-default" value="Submit" />
}


@section Scripts {
    <script src='https://www.google.com/recaptcha/api.js'></script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
