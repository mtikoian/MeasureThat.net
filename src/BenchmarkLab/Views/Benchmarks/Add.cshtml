@inject Microsoft.Extensions.Configuration.IConfiguration configuration
@using BenchmarkLab.Logic.Web
@model NewBenchmarkModel

@{
    ViewData["Title"] = "Create new benchmark";
}

<div class="page-header">
    <h1>Create new benchmark</h1>    
</div>

@using (Html.BeginForm("Add", "Benchmarks", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="panel panel-default">
        <div class="panel-heading">Benchmark name and description</div>
        <div class="panel-body">
            <div class="form-group">
                @Html.LabelFor(m => m.BenchmarkName)
                @Html.TextBoxFor(m => m.BenchmarkName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.BenchmarkName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Description)
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">Preparation code</div>
        <div class="panel-body">
            <div class="form-group">
                @Html.LabelFor(m => m.HtmlPreparationCode)
                @Html.TextAreaFor(m => m.HtmlPreparationCode, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.HtmlPreparationCode, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ScriptPreparationCode)
                @Html.TextAreaFor(m => m.ScriptPreparationCode, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ScriptPreparationCode, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="panel panel-default">
        <div class="panel-heading">Test cases</div>
        <div class="panel-body">
            <div class="form-group">
                @Html.LabelFor(m => m.BenchmarkCode)
                @Html.TextAreaFor(m => m.BenchmarkCode, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.BenchmarkCode, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.BenchmarkCode)
                @Html.TextAreaFor(m => m.BenchmarkCode, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.BenchmarkCode, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <input type="button" class="btn btn-default" value="Add test case" />
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="g-recaptcha" data-sitekey="@(configuration["ReCaptcha:SiteKey"])"></div>
        @Html.ValidationMessage(ValidateReCaptchaAttribute.ReCaptchaModelErrorKey, "", new { @class = "text-danger" })
    </div>    

    <input type="submit" class="btn btn-default" value="Submit" />
    <input type="button" class="btn btn-info" value="Test before submit" />
}



@section Scripts {
    @{
        // TODO: local styles in separate section
    }

<script src='https://www.google.com/recaptcha/api.js'></script>

<environment names="Development">
    <script src="~/lib/codemirror/lib/codemirror.js" asp-append-version="true"></script>
    <script src="~/lib/codemirror/mode/xml/xml.js" asp-append-version="true"></script>
    <script src="~/lib/codemirror/mode/javascript/javascript.js" asp-append-version="true"></script>
    <script src="~/lib/mustache/mustache.js" asp-append-version="true"></script>
</environment>
<environment names="Staging,Production">
    <script src="~/scripts/benchmarklab.min.js" asp-append-version="true"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.16.0/codemirror.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.17.0/mode/xml/xml.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.16.0/mode/javascript/javascript.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/mustache.js/2.1.3/mustache.min.js"></script>
</environment>  


    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">
        var htmlPreparationEditor = CodeMirror.fromTextArea(document.getElementById("HtmlPreparationCode"), {
            lineNumbers: true,
            mode: 'xml',
            theme: 'ambiance'
        });

        var scriptPreparationEditor = CodeMirror.fromTextArea(document.getElementById("ScriptPreparationCode"), {
            lineNumbers: true,
            mode: 'javascript',
            theme: 'ambiance'
        });

    </script>

<script id="testCase" type="x-tmpl-mustache">
    <div class="form-group">
        <label for="BenchmarkCode">Benchmark code</label>
        <textarea class="form-control" data-val="true" data-val-required="The Benchmark code field is required." id="BenchmarkCode" name="BenchmarkCode"></textarea>
        <span class="field-validation-valid text-danger" data-valmsg-for="BenchmarkCode" data-valmsg-replace="true"></span>
    </div>
</script>
}
