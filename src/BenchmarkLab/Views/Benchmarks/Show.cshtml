@using System.Threading.Tasks
@using Humanizer
@using MeasureThat.Net.Models
@using Microsoft.AspNetCore.Identity
@model MeasureThat.Net.Models.BenchmarkDto
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Run the benchmark: " + Model.BenchmarkName;
    if (this.Context.Request.Headers["X-Requested-With"] == "XMLHttpRequest")
    {
        // No chrome for ajax requests
        Layout = null;
    }
    bool showEditButton = false;
    if (SignInManager.IsSignedIn(User))
    {
        string userId = UserManager.GetUserId(User);
        if (string.Equals(Model.OwnerId, userId))
        {
            showEditButton = true;
        }
    }
}
<div class="page-header">
    <h2>
        <a href="@Url.Action("Index")"><span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span></a>
        &nbsp;Run the benchmark: <small>@Model.BenchmarkName (version: @Model.Version)</small>
    </h2>
    <h3>@Model.Description</h3>
    <h5><b>Created:</b>@Model.WhenCreated.Humanize()</h5>
    <h5>
        <b>Created by:</b>
        @if (string.IsNullOrWhiteSpace(Model.OwnerId))
        {
            <text>
                Guest
            </text>
        }
        else
        {
            <text>
                Registered User
            </text>
        }
    </h5>
</div>

@await Html.PartialAsync("_ShowBenchmark", Model)

<div id="result">
    <div class="panel panel-info">
        <div class="panel-heading">
            <div class="row">
                <div class="col-md-6">
                    <h4><b>Suite status:</b> <span class="label label-primary" data-role="suite-status">&lt;idle&gt;</span></h4>
                </div>
                <div class="col-md-6 text-right">
                    <button class="btn btn-primary" id="runTest" disabled>Run tests (@Model.TestCases.Count())</button>
                    <a class="btn btn-default" asp-action="ListResults" asp-route-id="@Model.Id">Previous results</a>
                    @if (showEditButton)
                    {
                        <a class="btn btn-default" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
                    }
                    <button class="btn btn-default" id="fork-btn">
                        <i class="fa fa-code-fork" aria-hidden="true">Fork</i>
                    </button>
                </div>
            </div>
        </div>
        <ul class="list-group">
            <li class="list-group-item">
                <table class="table table-striped table-bordered table-hover">
                    <tr>
                        <th>Test case name</th>
                        <th>Result</th>
                    </tr>

                    @foreach (var test in Model.TestCases)
                    {
                        <tr data-row-for="@test.TestCaseName">
                            <td>@test.TestCaseName</td>
                            <td data-role="result-label"></td>
                        </tr>
                    }
                </table>
                <h4><b>Fastest:</b> <span data-role="fastest-label">N/A</span></h4>
                <h4><b>Slowest:</b> <span data-role="slowest-label">N/A</span></h4>
            </li>
        </ul>
    </div>
</div>

@using (Html.BeginForm("Add", "Benchmarks", FormMethod.Post, new { @class = "hidden", id = "results-form" }))
{
    @Html.AntiForgeryToken()
    <input name="BenchmarkId" type="hidden" value="@Model.Id" />
    <input name="BenchmarkVersion" type="hidden" value="@Model.Version" />
    var counter = 0;
    foreach (var testCase in Model.TestCases)
    {
        <input name="ResultRows[@counter].TestName" type="hidden" />
        <input name="ResultRows[@counter].NumberOfSamples" type="hidden" />
        <input name="ResultRows[@counter].ExecutionsPerSecond" type="hidden" />
        <input name="ResultRows[@counter].RelativeMarginOfError" type="hidden" />
        counter++;
    }
}

@using (Html.BeginForm("Fork", "Benchmarks", FormMethod.Post, new { @class = "hidden", id = "fork-form" }))
{
    @Html.AntiForgeryToken()
    <input name="id" type="hidden" value="@Model.Id" />
}

<div id="chart_div" style="width: 90%; height: 35%;"></div>
<div id="results-placeholder"></div>

@section Styles
{
    @{await Html.RenderPartialAsync("_CodeMirrorStyles");}
}

@section Scripts {
    <environment names="Development">
        <script src="~/lib/lodash/dist/lodash.js"></script>
        <script src="~/lib/platform/platform.js"></script>
        <script src="~/lib/benchmark/benchmark.js"></script>
    </environment>
    <environment names="Staging,Production">
        <script src="https://cdnjs.cloudflare.com/ajax/libs/platform/1.3.1/platform.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.13.1/lodash.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/benchmark/2.1.0/benchmark.min.js"></script>
    </environment>
    <script src="~/js/benchmarklab.js" asp-append-version="true"></script>
    
    <script type="text/javascript">
                                                             
        // Handles click on run Tests button
        function runTests() {
            // Clean up any previous status
            $('[data-role="result-label"]').text('');
                $('[data-role="fastest-label"]').text('');
                $('[data-role="slowest-label"]').text('');
                $('#results-placeholder').empty();
                $('#results-placeholder').fadeIn();

                var preparation = $("#jspreparation").html();
                var content = $("#benchmark").html();
                try {
                    eval(preparation);
                    eval(content);
                } catch (e) {
                    alert("Error:" + JSON.stringify(e));
                    throw e;
                }
            }

        DisqusComments.setupLoad();
        pageController = new ShowPageController();
        $(document)
            .ready(function() {
                $("#runTest").click(runTests);
            });
    </script>

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    @{await Html.RenderPartialAsync("_CodeMirrorScripts");}

    <script type="text/template" id="jspreparation">
        @Html.Raw(Model.ScriptPreparationCode)
    </script>

    <script type="text/template" id="benchmark">
        var suite = new Benchmark.Suite;
        @foreach (var test in Model.TestCases)
        {
            @: suite.add('@test.TestCaseName', function() {
            @Html.Raw(test.BenchmarkCode);
            @:});
        }
        suite.on('start', pageController.onStartHandler);
        suite.on('cycle', pageController.onCycleHandler);
        suite.on('abort', pageController.onAbortHandler);
        suite.on('error', pageController.onErrorHandler);
        suite.on('reset', pageController.onResetHandler);
        suite.on('complete', pageController.onCompleteHandler);
        suite.run({ 'async': true });
    </script>
}


<div class="modal fade" id="errorDuringExecution" tabindex="-1" role="dialog" aria-labelledby="authenticateModal-label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="authenticateModal-label">Error occurred during benchmark execution:</h4>
            </div>
            <div class="modal-body" style="text-align: center" id="error-message">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<hr />
<div class="text-center">
    <!-- An element a visitor can click if they <3 comments! -->
    <button class="show-comments btn btn-default"><i class="fa fa-comments" aria-hidden="true"></i>&nbsp;Load Disqus comments</button>
</div>
<!-- The empty element required for Disqus to loads comments into -->
<div id="disqus_thread"></div>
