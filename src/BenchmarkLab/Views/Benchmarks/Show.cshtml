@using System.Threading.Tasks
@using Humanizer
@using MeasureThat.Net.Models
@using Microsoft.AspNetCore.Identity
@model MeasureThat.Net.Models.BenchmarkDto
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Run the benchmark: " + Model.BenchmarkName;
    if (this.Context.Request.Headers["X-Requested-With"] == "XMLHttpRequest")
    {
        // No chrome for ajax requests
        Layout = null;
    }
    bool showEditButton = false;
    if (SignInManager.IsSignedIn(User))
    {
        string userId = UserManager.GetUserId(User);
        if (string.Equals(Model.OwnerId, userId))
        {
            showEditButton = true;
        }
    }
}
<div class="page-header">
    <h2>
        <a href="@Url.Action("Index")"><span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span></a>
        &nbsp;Run the benchmark: <small>@Model.BenchmarkName (version: @Model.Version)</small>
    </h2>
    <h3>@Model.Description</h3>
    <h5><b>Created:</b>@Model.WhenCreated.Humanize(utcDate: false)</h5>
    <h5>
        <b>Created by:</b>
        @if (string.IsNullOrWhiteSpace(Model.OwnerId))
        {
            <text>
                Guest
            </text>
        }
        else
        {
            <text>
                Registered User
            </text>
        }
    </h5>
</div>

@await Html.PartialAsync("_ShowBenchmark", Model)

<div id="result">
    <div class="panel panel-info">
        <div class="panel-heading">
            <div class="row">
                <div class="col-md-6">
                    <h4><b>Suite status:</b> <span class="label label-primary" data-role="suite-status">&lt;idle&gt;</span></h4>
                </div>
                <div class="col-md-6 text-right">
                    <button class="btn btn-primary" id="runTest" disabled>Run tests (@Model.TestCases.Count())</button>
                    <a class="btn btn-default" asp-action="ListResults" asp-route-id="@Model.Id">Previous results</a>
                    @if (showEditButton)
                    {
                        <a class="btn btn-default" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
                    }
                    <button class="btn btn-default" id="fork-btn">
                        <i class="fa fa-code-fork" aria-hidden="true">Fork</i>
                    </button>
                </div>
            </div>
        </div>
        <ul class="list-group">
            <li class="list-group-item">
                <table class="table table-striped table-bordered table-hover">
                    <tr>
                        <th>Test case name</th>
                        <th>Result</th>
                    </tr>

                    @foreach (var test in Model.TestCases)
                    {
                        <tr data-row-for="@test.TestCaseName">
                            <td>@test.TestCaseName</td>
                            <td data-role="result-label"></td>
                        </tr>
                    }
                </table>
                <h4><b>Fastest:</b> <span data-role="fastest-label">N/A</span></h4>
                <h4><b>Slowest:</b> <span data-role="slowest-label">N/A</span></h4>
            </li>
        </ul>
    </div>
</div>

@section Styles
{
    @{await Html.RenderPartialAsync("_CodeMirrorStyles");}
}

@using (Html.BeginForm("PublishResults", "Benchmarks", FormMethod.Post, new { @class = "hidden", id = "results-form" }))
{
    @Html.AntiForgeryToken()
    <input name="BenchmarkId" type="hidden" value="@Model.Id" />
    <input name="BenchmarkVersion" type="hidden" value="@Model.Version" />
    var counter = 0;
    foreach (var testCase in Model.TestCases)
    {
        <input name="ResultRows[@counter].TestName" type="hidden" />
        <input name="ResultRows[@counter].NumberOfSamples" type="hidden" />
        <input name="ResultRows[@counter].ExecutionsPerSecond" type="hidden" />
        <input name="ResultRows[@counter].RelativeMarginOfError" type="hidden" />
        counter++;
    }
}

<div id="chart_div" style="width: 90%; height: 35%;"></div>
<div id="results-placeholder"></div>

@using (Html.BeginForm("Fork", "Benchmarks", FormMethod.Post, new { @class = "hidden", id = "fork-form" }))
{
    @Html.AntiForgeryToken()
    <input name="id" type="hidden" value="@Model.Id" />
}

@section Scripts {
    <script src="~/js/benchmarklab.js" asp-append-version="true"></script>
    
    <script type="text/javascript">
        DisqusComments.setupLoad();
    </script>

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    @{await Html.RenderPartialAsync("_CodeMirrorScripts");}
}

<iframe src="/Benchmarks/TestFrame?id=@Model.Id"></iframe>

<hr />
<div class="text-center">
    <!-- An element a visitor can click if they <3 comments! -->
    <button class="show-comments btn btn-default"><i class="fa fa-comments" aria-hidden="true"></i>&nbsp;Load Disqus comments</button>
</div>
<!-- The empty element required for Disqus to loads comments into -->
<div id="disqus_thread"></div>